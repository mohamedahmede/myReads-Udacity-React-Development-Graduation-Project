[{"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\index.js":"1","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\App.js":"2","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Title.js":"3","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Library.js":"4","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Shelf.js":"5","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Book.js":"6","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\BooksAPI.js":"7"},{"size":277,"mtime":1657419433087,"results":"8","hashOfConfig":"9"},{"size":4503,"mtime":1657427038727,"results":"10","hashOfConfig":"9"},{"size":159,"mtime":1656517713330,"results":"11","hashOfConfig":"9"},{"size":864,"mtime":1657408771873,"results":"12","hashOfConfig":"9"},{"size":777,"mtime":1657408783732,"results":"13","hashOfConfig":"9"},{"size":1641,"mtime":1657453163833,"results":"14","hashOfConfig":"9"},{"size":1097,"mtime":1656432592242,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10pjyds",{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\index.js",[],["33","34"],"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\App.js",["35","36","37","38","39","40","41"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, Route, Routes, Navigate } from \"react-router-dom\";\r\nimport Title from \"./components/Title\";\r\nimport Library from \"./components/Library\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./components/Book\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [books, setBooks] = useState([]); \r\n    \r\n    //save typed input in search\r\n    const [searchReq, setSearchReq] = useState(\"\");\r\n    \r\n    // save books that includes what's typed in search\r\n    const [includedBooks, setIncludedBooks] = useState([]);\r\n\r\n    //test state for library book object containing Id and shelf name\r\n    const [bookMap, setBookMap] = useState({id: \"\", shelf: \"\"});\r\n\r\n\r\n  //FUNCTIONS\r\n\r\n  //function for changing book's shelf by using the option menu\r\n  function bookNewShelf(clickedBook, newShelf) {\r\n    const upToDateLibrary = books.map((eachBook) => {\r\n      if (eachBook.id === clickedBook.id) {\r\n        //set the new shelf value to be the book's new shelf\r\n        clickedBook.shelf = newShelf;  \r\n   \r\n        return clickedBook;     \r\n      }\r\n      else {\r\n        return eachBook;\r\n      }     \r\n    }) \r\n    setBooks(upToDateLibrary);\r\n    //using the update feature from the API file to keep the order after refreshing\r\n    BooksAPI.update(clickedBook, newShelf);\r\n  }\r\n\r\n\r\n  //Search Function\r\n  function handleSearch(event) {\r\n    const newValue = event.target.value;\r\n    setSearchReq(newValue);\r\n  }\r\n\r\n\r\n  function refreshLibrary () {\r\n    let typing= true;\r\n    \r\n  if (searchReq.length > 0) {\r\n    BooksAPI.search(searchReq).then((d) => {\r\n      \r\n      if(d.error) {\r\n        // console.log(d);\r\n        //return nothing when the serch Request doesn't match\r\n        setIncludedBooks([]);\r\n      }else {\r\n        //return the books that are relevent to the search request\r\n        if (typing === true) {\r\n          // scan all searched books and handle their default value\r\n          //giving the searched books a shelf property\r\n          //d is the data recieved from search\r\n          d.map((booksFromSearch) => {\r\n            books.forEach((book) => {\r\n              if (booksFromSearch.id === book.id) {\r\n                return booksFromSearch.shelf = book.shelf\r\n                \r\n              }else {\r\n                return booksFromSearch;\r\n              }\r\n            })\r\n          })\r\n          setIncludedBooks(d); \r\n          \r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n  //cleaning up\r\n  return function unmount() {\r\n\r\n    typing= false;\r\n    setIncludedBooks([]);\r\n  }    \r\n\r\n  }\r\n\r\n  useEffect(refreshLibrary(), [searchReq])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //importing all the books from BooksAPI file\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const res = await BooksAPI.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    getBooks();\r\n   \r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n        <Routes>\r\n        <Route path=\"/search\" element={\r\n          <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n          \r\n            <a\r\n              className=\"close-search\" \r\n            >\r\n              Close\r\n            </a>\r\n            \r\n          </Link>\r\n\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                value={searchReq}\r\n                onChange={handleSearch}\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n\r\n              {includedBooks.map((book) => {\r\n                        return <li key={book.id}>\r\n                            <Book book={book} bookNewShelf={bookNewShelf} />\r\n                        </li>\r\n                    })\r\n            }\r\n            </ol>\r\n          </div>\r\n        </div>\r\n        }\r\n\r\n        />\r\n        <Route exact path=\"/\" element={\r\n          <div className=\"list-books\">\r\n          <Title />\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              \r\n              <Library books={books} bookNewShelf={bookNewShelf}/>\r\n            \r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">\r\n              <a>Add a book</a>\r\n            </Link>\r\n\r\n          </div>\r\n        </div>\r\n        }\r\n        />\r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Title.js",[],"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Library.js",[],"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Shelf.js",[],"C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\components\\Book.js",["42"],"import React from \"react\";\r\n\r\n\r\nfunction Book({book, bookNewShelf, commonShelf}) {\r\n\r\n    function handleChange(event) {\r\n        //handling the option the user choose and for which function\r\n        //bookNewShelf is a function in app.js file and passed doen using props to this file\r\n       return bookNewShelf(book, event.target.value);\r\n    \r\n    }\r\n\r\n    //this function is to give default value to none for books without shelf\r\n    function noneShelf (book) {\r\n        let noShelf;\r\n\r\n    if(book.shelf) {\r\n        return noShelf= book.shelf;\r\n    }else {\r\n        return noShelf= \"none\";\r\n    }\r\n\r\n    }\r\n    \r\n    \r\n    return <li>\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage:\r\n              `url(${book.imageLinks.smallThumbnail})`\r\n          }\r\n          }\r\n        ></div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select defaultValue={noneShelf(book)} onChange={handleChange}>\r\n          \r\n            <option  disabled>\r\n              Move to...\r\n            </option>\r\n            <option value=\"currentlyReading\">\r\n            Currently Reading\r\n            </option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{book.title}</div>\r\n      <div className=\"book-authors\">{book.authors}</div>\r\n    </div>\r\n  </li>\r\n  \r\n}\r\n\r\n\r\n\r\nexport default Book;","C:\\Users\\mabde\\Desktop\\myReads\\starter\\src\\BooksAPI.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":31,"nodeType":"49","messageId":"50","endLine":3,"endColumn":39},{"ruleId":"47","severity":1,"message":"51","line":22,"column":12,"nodeType":"49","messageId":"50","endLine":22,"endColumn":19},{"ruleId":"47","severity":1,"message":"52","line":22,"column":21,"nodeType":"49","messageId":"50","endLine":22,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":69,"column":35,"nodeType":"55","messageId":"56","endLine":69,"endColumn":37},{"ruleId":"57","severity":1,"message":"58","line":95,"column":3,"nodeType":"49","endLine":95,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":125,"column":13,"nodeType":"61","endLine":127,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":171,"column":15,"nodeType":"61","endLine":171,"endColumn":18},{"ruleId":"47","severity":1,"message":"62","line":20,"column":16,"nodeType":"49","messageId":"50","endLine":20,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'bookMap' is assigned a value but never used.","'setBookMap' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'noShelf' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]