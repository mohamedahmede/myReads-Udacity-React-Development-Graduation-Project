{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabde\\\\Desktop\\\\myReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link, Route, Routes, Navigate } from \"react-router-dom\";\nimport Title from \"./components/Title\";\nimport Library from \"./components/Library\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./components/Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]); //save typed input in search\n\n  const [searchReq, setSearchReq] = useState(\"\"); // save books that includes what's typed in search\n\n  const [includedBooks, setIncludedBooks] = useState([]); //test state for library book object containing Id and shelf name\n\n  const [bookMap, setBookMap] = useState({\n    id: \"\",\n    shelf: \"\"\n  }); //FUNCTIONS\n  //function for changing book's shelf by using the option menu\n\n  function bookNewShelf(clickedBook, newShelf) {\n    const upToDateLibrary = books.map(eachBook => {\n      if (eachBook.id === clickedBook.id) {\n        //set the new shelf value to be the book's new shelf\n        clickedBook.shelf = newShelf;\n        return clickedBook;\n      } else {\n        return eachBook;\n      }\n    });\n    setBooks(upToDateLibrary); //using the update feature from the API file to keep the order after refreshing\n\n    BooksAPI.update(clickedBook, newShelf);\n  } //Search Function\n\n\n  function handleSearch(event) {\n    const newValue = event.target.value;\n    setSearchReq(newValue);\n  }\n\n  function refreshLibrary() {\n    let typing = true;\n\n    if (searchReq.length > 0) {\n      BooksAPI.search(searchReq).then(d => {\n        if (d.error) {\n          // console.log(d);\n          //return nothing when the serch Request doesn't match\n          setIncludedBooks([]);\n        } else {\n          //return the books that are relevent to the search request\n          if (typing === true) {\n            // scan all searched books and handle their default value\n            //giving the searched books a shelf property\n            //d is the data recieved from search\n            d.map(booksFromSearch => {\n              books.forEach(book => {\n                if (booksFromSearch.id === book.id) {\n                  return booksFromSearch.shelf = book.shelf;\n                } else {\n                  return booksFromSearch;\n                }\n              });\n            });\n            setIncludedBooks(d);\n          }\n        }\n      });\n    } //cleaning up\n\n\n    return function unmount() {\n      typing = false;\n      setIncludedBooks([]);\n    };\n  }\n\n  useEffect(refreshLibrary(), [searchReq]); //importing all the books from BooksAPI file\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-books-bar\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"close-search\",\n                onClick: history.back(),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-books-input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: searchReq,\n                onChange: handleSearch,\n                type: \"text\",\n                placeholder: \"Search by title, author, or ISBN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-books-results\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"books-grid\",\n              children: includedBooks.map(book => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Book, {\n                    book: book,\n                    bookNewShelf: bookNewShelf\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 29\n                  }, this)\n                }, book.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-books-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Library, {\n                books: books,\n                bookNewShelf: bookNewShelf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"open-search\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/search\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: \"Add a book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"awhwS49mk/g39btY1QqFNMcwd/Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mabde/Desktop/myReads/starter/src/App.js"],"names":["useState","useEffect","Link","Route","Routes","Navigate","Title","Library","BooksAPI","Book","App","books","setBooks","searchReq","setSearchReq","includedBooks","setIncludedBooks","bookMap","setBookMap","id","shelf","bookNewShelf","clickedBook","newShelf","upToDateLibrary","map","eachBook","update","handleSearch","event","newValue","target","value","refreshLibrary","typing","length","search","then","d","error","booksFromSearch","forEach","book","unmount","getBooks","res","getAll","history","back"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, Route, Routes, Navigate } from \"react-router-dom\";\r\nimport Title from \"./components/Title\";\r\nimport Library from \"./components/Library\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./components/Book\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [books, setBooks] = useState([]); \r\n    \r\n    //save typed input in search\r\n    const [searchReq, setSearchReq] = useState(\"\");\r\n    \r\n    // save books that includes what's typed in search\r\n    const [includedBooks, setIncludedBooks] = useState([]);\r\n\r\n    //test state for library book object containing Id and shelf name\r\n    const [bookMap, setBookMap] = useState({id: \"\", shelf: \"\"});\r\n\r\n\r\n  //FUNCTIONS\r\n\r\n  //function for changing book's shelf by using the option menu\r\n  function bookNewShelf(clickedBook, newShelf) {\r\n    const upToDateLibrary = books.map((eachBook) => {\r\n      if (eachBook.id === clickedBook.id) {\r\n        //set the new shelf value to be the book's new shelf\r\n        clickedBook.shelf = newShelf;  \r\n   \r\n        return clickedBook;     \r\n      }\r\n      else {\r\n        return eachBook;\r\n      }     \r\n    }) \r\n    setBooks(upToDateLibrary);\r\n    //using the update feature from the API file to keep the order after refreshing\r\n    BooksAPI.update(clickedBook, newShelf);\r\n  }\r\n\r\n\r\n  //Search Function\r\n  function handleSearch(event) {\r\n    const newValue = event.target.value;\r\n    setSearchReq(newValue);\r\n  }\r\n\r\n\r\n  function refreshLibrary () {\r\n    let typing= true;\r\n    \r\n  if (searchReq.length > 0) {\r\n    BooksAPI.search(searchReq).then((d) => {\r\n      \r\n      if(d.error) {\r\n        // console.log(d);\r\n        //return nothing when the serch Request doesn't match\r\n        setIncludedBooks([]);\r\n      }else {\r\n        //return the books that are relevent to the search request\r\n        if (typing === true) {\r\n          // scan all searched books and handle their default value\r\n          //giving the searched books a shelf property\r\n          //d is the data recieved from search\r\n          d.map((booksFromSearch) => {\r\n            books.forEach((book) => {\r\n              if (booksFromSearch.id === book.id) {\r\n                return booksFromSearch.shelf = book.shelf\r\n                \r\n              }else {\r\n                return booksFromSearch;\r\n              }\r\n            })\r\n          })\r\n          setIncludedBooks(d); \r\n          \r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n  //cleaning up\r\n  return function unmount() {\r\n\r\n    typing= false;\r\n    setIncludedBooks([]);\r\n  }    \r\n\r\n  }\r\n\r\n  useEffect(refreshLibrary(), [searchReq])\r\n\r\n\r\n\r\n\r\n  //importing all the books from BooksAPI file\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const res = await BooksAPI.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    getBooks();\r\n   \r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n        <Routes>\r\n        <Route path=\"/search\" element={\r\n          <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n          \r\n            <a\r\n              className=\"close-search\" onClick={history.back()}\r\n            >\r\n              Close\r\n            </a>\r\n            \r\n          </Link>\r\n\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                value={searchReq}\r\n                onChange={handleSearch}\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n\r\n              {includedBooks.map((book) => {\r\n                        return <li key={book.id}>\r\n                            <Book book={book} bookNewShelf={bookNewShelf} />\r\n                        </li>\r\n                    })\r\n            }\r\n            </ol>\r\n          </div>\r\n        </div>\r\n        }\r\n\r\n        />\r\n        <Route exact path=\"/\" element={\r\n          <div className=\"list-books\">\r\n          <Title />\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              \r\n              <Library books={books} bookNewShelf={bookNewShelf}/>\r\n            \r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">\r\n              <a>Add a book</a>\r\n            </Link>\r\n\r\n          </div>\r\n        </div>\r\n        }\r\n        />\r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}