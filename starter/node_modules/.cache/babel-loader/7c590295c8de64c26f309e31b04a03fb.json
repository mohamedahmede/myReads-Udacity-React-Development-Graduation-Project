{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabde\\\\Desktop\\\\myReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Title from \"./components/Title\";\nimport Library from \"./components/Library\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //function for changing book's shelf by using the option menu\n  function bookNewShelf(clickedBook, newShelf) {\n    const upToDateLibrary = books.map(eachBook => {\n      if (eachBook.id === clickedBook.id) {\n        //set the new shelf value to be the book's new shelf\n        clickedBook.shelf = newShelf;\n        return clickedBook;\n      } else return eachBook;\n    });\n    setBooks(upToDateLibrary); //using the update feature from the API file to keep the order after refreshing\n\n    BooksAPI.update(clickedBook, newShelf);\n  } //defining all states\n\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]); //save input search\n\n  const [searchReq, setSearchReq] = useState(\"\"); // save books that includes what's typed in search\n\n  const [includedBooks, setIncludedBooks] = useState([]); //Search Function\n\n  function handleSearch(event) {\n    const newValue = event.target.value;\n    setSearchReq(newValue);\n    BooksAPI.search(searchReq).then(b => {\n      setIncludedBooks(b);\n    });\n  } // useEffect(() => {\n  //   BooksAPI.search(searchReq)\n  // }, [searchReq])\n  //importing all the books from BooksAPI file\n\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: searchReq,\n            onChange: handleSearch,\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: includedBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Library, {\n            books: books,\n            bookNewShelf: bookNewShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jS+8dhU5ht+4b6IaPaNSkspNtr8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mabde/Desktop/myReads/starter/src/App.js"],"names":["useState","useEffect","Title","Library","BooksAPI","App","bookNewShelf","clickedBook","newShelf","upToDateLibrary","books","map","eachBook","id","shelf","setBooks","update","showSearchPage","setShowSearchpage","searchReq","setSearchReq","includedBooks","setIncludedBooks","handleSearch","event","newValue","target","value","search","then","b","getBooks","res","getAll"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAGd;AACC,WAASC,YAAT,CAAsBC,WAAtB,EAAmCC,QAAnC,EAA6C;AAC3C,UAAMC,eAAe,GAAGC,KAAK,CAACC,GAAN,CAAWC,QAAD,IAAc;AAC9C,UAAIA,QAAQ,CAACC,EAAT,KAAgBN,WAAW,CAACM,EAAhC,EAAoC;AAClC;AACAN,QAAAA,WAAW,CAACO,KAAZ,GAAoBN,QAApB;AACA,eAAOD,WAAP;AACD,OAJD,MAKK,OAAOK,QAAP;AAEN,KARuB,CAAxB;AASAG,IAAAA,QAAQ,CAACN,eAAD,CAAR,CAV2C,CAW3C;;AACAL,IAAAA,QAAQ,CAACY,MAAT,CAAgBT,WAAhB,EAA6BC,QAA7B;AACD,GAjBY,CAoBb;;;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACU,KAAD,EAAQK,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAvBa,CAyBb;;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C,CA1Ba,CA2Bb;;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD,CA5Ba,CA8Bb;;AACA,WAASuB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACAP,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACArB,IAAAA,QAAQ,CAACwB,MAAT,CAAgBT,SAAhB,EAA2BU,IAA3B,CAAiCC,CAAD,IAAO;AAErCR,MAAAA,gBAAgB,CAACQ,CAAD,CAAhB;AACD,KAHD;AAID,GAtCY,CAuCb;AAEA;AAEA;AAGA;;;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAM5B,QAAQ,CAAC6B,MAAT,EAAlB;AACAlB,MAAAA,QAAQ,CAACiB,GAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AAET,GARQ,EAQN,EARM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGd,cAAc,gBACb;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,CAACD,cAAF,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,KAAK,EAAEE,SADT;AAEE,YAAA,QAAQ,EAAEI,YAFZ;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBAwBb;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAA,iCAEE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAEX,KAAhB;AAAuB,YAAA,YAAY,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMY,iBAAiB,CAAC,CAACD,cAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GApGQZ,G;;KAAAA,G;AAsGT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Title from \"./components/Title\";\r\nimport Library from \"./components/Library\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n //function for changing book's shelf by using the option menu\r\n  function bookNewShelf(clickedBook, newShelf) {\r\n    const upToDateLibrary = books.map((eachBook) => {\r\n      if (eachBook.id === clickedBook.id) {\r\n        //set the new shelf value to be the book's new shelf\r\n        clickedBook.shelf = newShelf\r\n        return clickedBook;     \r\n      }\r\n      else return eachBook;\r\n      \r\n    }) \r\n    setBooks(upToDateLibrary);\r\n    //using the update feature from the API file to keep the order after refreshing\r\n    BooksAPI.update(clickedBook, newShelf);\r\n  }\r\n\r\n\r\n  //defining all states\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n\r\n  const [books, setBooks] = useState([]);\r\n\r\n  //save input search\r\n  const [searchReq, setSearchReq] = useState(\"\");\r\n  // save books that includes what's typed in search\r\n  const [includedBooks, setIncludedBooks] = useState([]);\r\n\r\n  //Search Function\r\n  function handleSearch(event) {\r\n    const newValue = event.target.value;\r\n    setSearchReq(newValue);\r\n    BooksAPI.search(searchReq).then((b) => {\r\n\r\n      setIncludedBooks(b);\r\n    })\r\n  }\r\n  // useEffect(() => {\r\n    \r\n  //   BooksAPI.search(searchReq)\r\n      \r\n  // }, [searchReq])\r\n\r\n\r\n  //importing all the books from BooksAPI file\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const res = await BooksAPI.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    getBooks();\r\n   \r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                value={searchReq}\r\n                onChange={handleSearch}\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">{includedBooks}</ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <Title />\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              \r\n              <Library books={books} bookNewShelf={bookNewShelf} />\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}