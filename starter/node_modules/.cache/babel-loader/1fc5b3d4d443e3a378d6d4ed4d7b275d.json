{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabde\\\\Desktop\\\\myReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Title from \"./components/Title\";\nimport Library from \"./components/Library\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./components/Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //function for changing book's shelf by using the option menu\n  function bookNewShelf(clickedBook, newShelf) {\n    const upToDateLibrary = books.map(eachBook => {\n      if (eachBook.id === clickedBook.id) {\n        //set the new shelf value to be the book's new shelf\n        clickedBook.shelf = newShelf;\n        setCommonShelf(newShelf);\n        return clickedBook;\n      } else return eachBook;\n    });\n    setBooks(upToDateLibrary); //using the update feature from the API file to keep the order after refreshing\n\n    BooksAPI.update(clickedBook, newShelf);\n    console.log(clickedBook);\n  } //defining all states\n\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]); //save typed input in search\n\n  const [searchReq, setSearchReq] = useState(\"\"); // save books that includes what's typed in search\n\n  const [includedBooks, setIncludedBooks] = useState([]); //search book to match with it's library when moved\n\n  const [commonShelf, setCommonShelf] = useState(\"\"); //Search Function\n\n  function handleSearch(event) {\n    event.preventDefault();\n    const newValue = event.target.value;\n    setSearchReq(newValue);\n  }\n\n  useEffect(() => {\n    let typing = true;\n\n    if (searchReq.length > 0) {\n      BooksAPI.search(searchReq).then(d => {\n        if (d.error) {\n          console.log(d); //return nothing when the serch Request doesn't match\n\n          setIncludedBooks([]);\n        } else {\n          //return the books that are relevent to the search request\n          if (typing === true) {\n            setIncludedBooks(d);\n            console.log(d);\n          }\n        }\n      });\n    } //cleaning up\n\n\n    return function unmount() {\n      typing = false;\n      setIncludedBooks([]);\n    };\n  }, [searchReq]); //importing all the books from BooksAPI file\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: searchReq,\n            onChange: handleSearch,\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: [includedBooks.map(book => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Book, {\n                book: book,\n                bookNewShelf: bookNewShelf,\n                commonShelf: commonShelf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)\n            }, book.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 32\n            }, this);\n          }), console.log(includedBooks)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Library, {\n            books: books,\n            bookNewShelf: bookNewShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UXOMxDQsy6Lc8IvM42sjstecayM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mabde/Desktop/myReads/starter/src/App.js"],"names":["useState","useEffect","Title","Library","BooksAPI","Book","App","bookNewShelf","clickedBook","newShelf","upToDateLibrary","books","map","eachBook","id","shelf","setCommonShelf","setBooks","update","console","log","showSearchPage","setShowSearchpage","searchReq","setSearchReq","includedBooks","setIncludedBooks","commonShelf","handleSearch","event","preventDefault","newValue","target","value","typing","length","search","then","d","error","unmount","getBooks","res","getAll","book"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Title from \"./components/Title\";\r\nimport Library from \"./components/Library\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./components/Book\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  //function for changing book's shelf by using the option menu\r\n  function bookNewShelf(clickedBook, newShelf) {\r\n    const upToDateLibrary = books.map((eachBook) => {\r\n      if (eachBook.id === clickedBook.id) {\r\n        //set the new shelf value to be the book's new shelf\r\n        clickedBook.shelf = newShelf;\r\n        setCommonShelf(newShelf);        \r\n        return clickedBook;     \r\n      }\r\n      else return eachBook;     \r\n    }) \r\n    setBooks(upToDateLibrary);\r\n    //using the update feature from the API file to keep the order after refreshing\r\n    BooksAPI.update(clickedBook, newShelf);\r\n    console.log(clickedBook);\r\n  }\r\n\r\n\r\n  //defining all states\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n\r\n  const [books, setBooks] = useState([]);\r\n\r\n  //save typed input in search\r\n  const [searchReq, setSearchReq] = useState(\"\");\r\n  // save books that includes what's typed in search\r\n  const [includedBooks, setIncludedBooks] = useState([]);\r\n\r\n  //search book to match with it's library when moved\r\n  const [commonShelf, setCommonShelf] = useState(\"\");\r\n\r\n\r\n\r\n  //Search Function\r\n  function handleSearch(event) {\r\n    event.preventDefault();\r\n    const newValue = event.target.value;\r\n    setSearchReq(newValue);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let typing= true;\r\n    \r\n  if (searchReq.length > 0) {\r\n    BooksAPI.search(searchReq).then((d) => {\r\n      \r\n      if(d.error) {\r\n        console.log(d);\r\n        //return nothing when the serch Request doesn't match\r\n        setIncludedBooks([]);\r\n      }else {\r\n        //return the books that are relevent to the search request\r\n        if (typing === true) {\r\n          setIncludedBooks(d);\r\n          console.log(d);\r\n        }\r\n       \r\n      }\r\n    })\r\n  }\r\n  //cleaning up\r\n  return function unmount() {\r\n\r\n    typing= false;\r\n    setIncludedBooks([]);\r\n\r\n  }\r\n        \r\n\r\n  }, [searchReq])\r\n\r\n\r\n  //importing all the books from BooksAPI file\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const res = await BooksAPI.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    getBooks();\r\n   \r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                value={searchReq}\r\n                onChange={handleSearch}\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n            {\r\n              includedBooks.map((book) => {\r\n                        return <li key={book.id}>\r\n                            <Book book={book} bookNewShelf={bookNewShelf} commonShelf={commonShelf}/>\r\n                        </li>\r\n                    })\r\n            }\r\n            {console.log(includedBooks)}\r\n            \r\n            </ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <Title />\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              \r\n              <Library books={books} bookNewShelf={bookNewShelf} />\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}